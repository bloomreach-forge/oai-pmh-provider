<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


  <bean id="jaxrsRestOAIPMHServiceQueryStringReplacingInterceptor" class="org.hippoecm.hst.jaxrs.cxf.QueryStringReplacingInterceptor">
    <property name="paramNameReplaces">
      <map>
        <!-- The following will replace '_format' parameter name with '_type' parameter name before JAX-RS processing.
        <entry key="_format" value="_type" />
        -->
      </map>
    </property>
    <property name="additionalQueryString">
      <value></value>
      <!-- The following will append additional query string before JAX-RS processing
      <value>addparam1=value1&amp;addparam2=value2</value>
      -->
    </property>
  </bean>

  <!--<bean id="beanPackage" class="java.lang.String">-->
    <!--<constructor-arg value="org.onehippo.forge"/>-->
  <!--</bean>-->

  <bean id="jaxrsOAIPMHContextProvider" class="org.onehippo.forge.oaipmh.provider.provider.JaxbContextProvider">
    <property name="beansPackage" ref="beanPackage"/>
    <!--
      you can add extra classes if needed as followed:
    -->
    <!--
      <property name="classes">
        <list>
          <value type="java.lang.Class">org.example.beans.MyBean</value>
        </list>
      </property>
    -->
  </bean>

  <bean id="OAIPMHRestAllEntityProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <ref bean="jaxrsOAIPMHContextProvider"/>
      </list>
    </property>
  </bean>

  <bean id="jaxrsRestOAIPMHServiceInvoker" class="org.hippoecm.hst.jaxrs.cxf.AroundProcessableJAXRSInvoker">
    <property name="invokerPreprocessors">
      <list>
        <bean class="org.hippoecm.hst.jaxrs.cxf.SecurityAnnotationInvokerPreprocessor">
        </bean>
        <bean class="org.hippoecm.hst.jaxrs.cxf.PersistableAnnotationInvokerPreprocessor">
        </bean>
      </list>
    </property>
    <property name="invokerPostprocessors">
      <list>
        <bean class="org.hippoecm.hst.jaxrs.cxf.PersistableAnnotationInvokerPostprocessor">
        </bean>
      </list>
    </property>
  </bean>

  <bean id="jaxrsRestOAIPMHServiceValve" class="org.hippoecm.hst.core.container.JaxrsRestServiceValve"
        init-method="initialize" destroy-method="destroy">
    <constructor-arg>
      <bean class="org.hippoecm.hst.jaxrs.cxf.CXFJaxrsService">
        <constructor-arg value="jaxrsOAIPMHService"/>
        <property name="servletPath" value=""/>
        <property name="jaxrsServerFactoryBean">
          <bean class="org.apache.cxf.jaxrs.JAXRSServerFactoryBean">
            <property name="address" value="/"/>
            <property name="providers" ref="OAIPMHRestAllEntityProviders"/>
            <property name="resourceProviders" ref="customRestOAIPMHResourceProviders"/>
            <property name="invoker" ref="jaxrsRestOAIPMHServiceInvoker"/>
          </bean>
        </property>
        <property name="inInterceptors">
          <list>
            <ref bean="jaxrsRestOAIPMHServiceQueryStringReplacingInterceptor"/>
          </list>
        </property>
      </bean>
    </constructor-arg>
    <property name="valveName" value="jaxrsRestOAIPMHServiceValve"/>
  </bean>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="org.hippoecm.hst.core.container.Pipelines" />
        <property name="propertyPath" value="pipelines"/>
      </bean>
    </property>
    <property name="targetMethod" value="put" />
    <property name="arguments">
      <list>
        <value>JaxrsRestOAIPMHPipeline</value>
        <bean class="org.hippoecm.hst.core.container.HstSitePipeline">
          <property name="initializationValves">
            <list>
              <ref bean="initializationValve" />
              <ref bean="cmsSecurityValve"/>
            </list>
          </property>
          <property name="processingValves">
            <list>
              <ref bean="securityValve" />
              <ref bean="subjectBasedSessionValve" />
              <ref bean="noCacheResponseHeadersValve" />
              <ref bean="jaxrsRestOAIPMHServiceValve" />
            </list>
          </property>
          <property name="cleanupValves">
            <list>
              <ref bean="diagnosticReportingValve" />
              <ref bean="cleanupValve" />
            </list>
          </property>
        </bean>
      </list>
    </property>
  </bean>

</beans>
