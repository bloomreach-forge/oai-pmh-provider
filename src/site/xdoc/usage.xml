<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
    Copyright 2009-2012 Hippo
    
    Licensed under the Apache License, Version 2.0 (the  "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<document>
  <properties>
    <title>Usage Instructions</title>
  </properties>
  <body>
    <section name="Usage">
      <subsection name="Prerequisites">
        <p>
          These instructions assume that you have a Hippo project based on the Hippo project archetype, i.e.
          a Maven multiproject consisting of three submodules: cms, site and content/bootstrap.

        </p>
        <p>
          You should know on how to use the
          <a href="http://www.onehippo.org/7_7/library/concepts/rest/restful-jax-rs-component-support-in-hst-2.html">HST jax-rs API</a>
        </p>
        <p>
          You should know how the OAI-PMH protocol works;
          <a href="http://www.openarchives.org/OAI/openarchivesprotocol.html">offical website</a>
        </p>
      </subsection>

      <subsection name="Installation">
        <ol>


          <li>
            <p>Add to the pom.xml of your
              <i>cms</i>
              module:
            </p>
            <source>
              <![CDATA[
<dependency>
 <groupId>org.onehippo.forge</groupId>
 <artifactId>oai-pmh-provider-repository</artifactId>
</dependency>
                        ]]>
            </source>
          </li>
          <li>
            <p>Add to the pom.xml of your
              <i>site</i>
              module:
            </p>
            <source>
              <![CDATA[
<dependency>
 <groupId>org.onehippo.forge</groupId>
 <artifactId>oai-pmh-provider-hst</artifactId>
</dependency>
                        ]]>
            </source>
          </li>
          <li>
            <p>Add to the web.xml of your
              <i>site</i>
              module:
            </p>
            <source>
              <![CDATA[
<context-param>
    <param-name>hst-beans-annotated-classes</param-name>
    <param-value>.....,
      classpath*:org/onehippo/forge/oaipmh/provider/api/**/*.class,
    </param-value>
  </context-param>
                        ]]>
            </source>
          </li>

        </ol>
      </subsection>

      <subsection name="Configure your content beans">
        <p>first implement the org.onehippo.forge.oaipmh.provider.api.OAIBean</p>
        <p>There are 3 types of annotations you should use in your content beans:</p>
        <ol>
          <li>@OAI: for setting the setName (on the bean class)</li>
          <li>@OAIDelegate: for delegating different metadata prefixes (we currently only support "dc_oai" and/or "lom")</li>
          <li>@OAIIdentifier: for generating the record identifier</li>
          <li>
            <a href="https://forge.onehippo.org/svn/oaipmh/oai-pmh-demo/trunk/site/src/main/java/org/onehippo/forge/oaipmh/beans/NewsDocument.java">example newsdocument:</a>
          </li>
          <li>
            <a href="https://forge.onehippo.org/svn/oaipmh/oai-pmh-demo/trunk/site/src/main/java/org/onehippo/forge/oaipmh/beans/TextDocument.java">example textdocument:</a>
          </li>
        </ol>
      </subsection>
      <subsection name="Make sure you have the oai:document mixin on your document">
        <p>Either in the CND (example):</p>
        <source>
          <![CDATA[

            <'oaipmh.demo'='http://www.onehippo.org/oaipmh.demo/nt/1.0'>
<'hippo'='http://www.onehippo.org/jcr/hippo/nt/2.0'>
<'hippostd'='http://www.onehippo.org/jcr/hippostd/nt/2.0'>
<'hippostdpubwf'='http://www.onehippo.org/jcr/hippostdpubwf/nt/1.0'>
<'oai'='http://www.hippoecm.org/hst/nt/oai/1.0'>

[oaipmh.demo:basedocument] > hippo:document, hippostd:publishableSummary, hippostdpubwf:document orderable

[oaipmh.demo:textdocument] > oaipmh.demo:basedocument, hippostd:relaxed

[oaipmh.demo:newsdocument] > oaipmh.demo:basedocument, hippostd:relaxed, oai:document

              ]]>
        </source>
        <p>Or in your prototype (best practice):</p>
        <source>
          <![CDATA[

            <sv:node sv:name="hipposysedit:prototypes">
    <sv:property sv:name="jcr:primaryType" sv:type="Name">
      <sv:value>hipposysedit:prototypeset</sv:value>
    </sv:property>
    <sv:node sv:name="hipposysedit:prototype">
      <sv:property sv:name="jcr:primaryType" sv:type="Name">
        <sv:value>oaipmh.demo:textdocument</sv:value>
      </sv:property>
      <sv:property sv:name="jcr:mixinTypes" sv:type="Name">
        <sv:value>hippo:harddocument</sv:value>
        <sv:value>hippotranslation:translated</sv:value>
        <sv:value>oai:document</sv:value>
      </sv:property>

              ]]>
        </source>
        <p>Depending on your project, you might need to create a script which will add the mixin on all existing documents</p>
      </subsection>
      <subsection name="Add the resource to the Custom Jaxrs Plain resource Pipeline (or to custom pipeline)">
        <li>
          <p>add oai-pmh.xml to META-INF.hst-assembly.overrides package of your site project. Example:</p>
          <source>
            <![CDATA[
   <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <!-- The following three imports will include pipeline configurations for both JaxrsRestPlainPipeline and JaxrsRestContentPipeline !!! -->
  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-jackson.xml"/>
  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-plain-pipeline.xml"/>

  <!-- Your custom JAX-RS REST Plain Resource Providers will be added into the following list !!! -->
  <bean id="customRestPlainResourceProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <!-- Wrap your JAX-RS component by SingletonResourceProvider. -->
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="org.onehippo.forge.oaipmh.provider.resource.OAIPMHResource"/>
          </constructor-arg>
        </bean>
      </list>
    </property>
  </bean>

</beans>
              ]]>
          </source>

        </li>
      </subsection>
      <subsection name="Configure HST mount">
        <li>
          <p>Configure you hst mount configuration to display the correct mount on the URL. e.g.
            <a href="http://localhost:8080/site/pmh">http://localhost:8080/site/pmh</a>
          </p>
          <p>Automatically the oai-pmh project will set pmh mount on the hst:root mount</p>
          <p>try out the identify verb e.g.
            <a href="http://localhost:8080/site/pmh/oai?verb=Identify">http://localhost:8080/site/pmh/oai?verb=Identify</a>
          </p>
          <p>You can configure metadata from the Identify by looking at the mount for the identify.path property. Which points to an Identify document</p>
        </li>
      </subsection>
      <subsection name="Test">
        <li>
          <a href="http://localhost:8080/site/pmh/oai?verb=Identify">Identify</a>
        </li>
        <li>
          <a href="http://localhost:8080/site/pmh/oai?verb=ListRecords&amp;metadataPrefix=oai_dc">List Records (oai_dc)</a>
        </li>
        <li>
          <a href="http://localhost:8080/site/pmh/oai?verb=ListRecords&amp;metadataPrefix=lom">List Records (lom : edurep)</a>
        </li>
        <li>
          <a href="http://localhost:8080/site/pmh/oai?verb=ListIdentifiers&amp;metadataPrefix=lom">List identifiers (lom : edurep)</a>
        </li>
        <li>
          <a href="http://localhost:8080/site/pmh/oai?verb=GetRecord&amp;identifier=a8a0bb9f-c5b6-47e8-9503-4f5f8ce9966f&amp;metadataPrefix=lom">Get Single Record (lom : edurep)</a>
        </li>
        <li>
          <a href="http://localhost:8080/site/pmh/oai?verb=ListMetadataFormats">List Metadata formats oai_dc &amp; lom (edurep)</a>
        </li>
        <li>
          <a href="http://localhost:8080/site/pmh/oai?verb=ListSets">List Sets</a>
        </li>
      </subsection>
      <subsection name="EDUREP NLLOM">
        <p>Important for EDUREP!!</p>
        <p>You should have the knowlegde about the used xml formats and which elements and attributes are mandatory for edurep NLLOM</p>
        <p>
          <a href="http://wiki.surf.nl/display/nllom/Home">http://wiki.surf.nl/display/nllom/Home</a>
        </p>
        <p>All elements and attributes are already provided in the oai-pmh project under the following package: <a href="https://forge.onehippo.org/svn/oaipmh/trunk/hst/src/main/java/org/onehippo/forge/oaipmh/provider/model/oai/edurep/lom/"> package</a></p>
        <p>Plus we also provide a helper class which should get you going: <a href="https://forge.onehippo.org/svn/oaipmh/trunk/hst/src/main/java/org/onehippo/forge/oaipmh/provider/model/oai/edurep/lom/NLLom.java">NLLOM</a></p>
        <p>Be aware you probably need to check your own metadata configuration for mandatory elements and properties</p>
      </subsection>
    </section>

  </body>
</document>
